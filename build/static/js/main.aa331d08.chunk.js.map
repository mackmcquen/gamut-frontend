{"version":3,"sources":["components/Signup.js","actions/auth.js","components/Login.js","components/Artwork.js","containers/ArtworkContainer.js","components/Search.js","components/Navbar.js","components/UserArtwork.js","containers/UserArtworkContainer.js","components/Collection.js","components/Account.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/auth.js","index.js"],"names":["Signup","handleChange","e","setState","target","id","value","signupUser","preventDefault","console","log","reqObj","method","headers","Accept","body","JSON","stringify","user","email","state","username","password","fetch","then","resp","json","props","history","push","alert","className","src","alt","Box","m","Typography","variant","onSubmit","this","TextField","onChange","type","label","autoComplete","Button","color","to","React","Component","currentUser","Login","loginUser","error","localStorage","setItem","token","loginSuccess","mapDispatchToProps","connect","Artwork","handleSave","artDetails","title","art","image","artist","artistName","date","completitionYear","data","collectionDetails","collection_id","artwork_id","catch","err","href","style","height","width","onClick","ArtworkContainer","renderArtworks","artworks","map","Grid","item","xs","Paper","elevation","key","auth","spacing","container","direction","justify","alignItems","Search","name","submitSearch","fetchArt","searchTerm","artworkURL","pageNumber","totalResults","getItem","Authorization","fontSize","placeholder","Tooltip","IconButton","fetchMore","Navbar","AppBar","position","background","Toolbar","flexGrow","UserArtwork","userArtwork","deleteUserArtwork","UserArtworkContainer","collection","Collection","handleSearch","filteredSearch","filteredCollection","filtered","filter","toLowerCase","includes","length","deleteFilter","userArtworkObj","renderCollection","Account","handleLogout","removeItem","logoutUser","App","path","component","Boolean","window","location","hostname","match","combineReducers","action","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","theme","createMuiTheme","palette","colors","secondary","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.aa331d08.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography'\n\nconst usersAPI = `https://gamutart.herokuapp.com/users`\n\nclass Signup extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            email: '',\n            username: '',\n            password: ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        })\n    }\n\n    signupUser = (e) => {\n        e.preventDefault()\n        console.log('-----------------')\n        // Send the user info to the backend\n        const reqObj = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              Accept: 'application/json'\n            },\n            body: JSON.stringify({user: {\n                email: this.state.email,\n                username: this.state.username,\n                password: this.state.password\n            }})\n        }\n        fetch(usersAPI, reqObj)\n            .then(resp => resp.json())\n            .then(user => {\n                if (this.state.email && this.state.username && this.state.password !== '') {\n                    console.log(user)\n                    // Redirect to /search path\n                    this.props.history.push(`/search`)\n                } else {\n                    alert('Please fill all fields')\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div className='Signup-form'>\n                <img src='../gamut.png' alt='Gamut' className='Gamut-logo' />\n                <Box m={3}>\n                <Typography className='Signup-title' variant='h4'>Welcome aboard.</Typography>\n                </Box>\n                <form onSubmit={ this.signupUser }>\n                    <Box m={-1}>\n                        <TextField className='Signup-input' id='email' onChange={ this.handleChange } type='email' value={ this.state.email } variant='filled' label='Email' autoComplete='off' />\n                    </Box>\n                    <br />\n                    <Box m={1}>\n                        <TextField className='Signup-input' id='username' onChange={ this.handleChange } type='text' value={ this.state.username } variant='filled' label='Username' autoComplete='off' />\n                    </Box>\n                    <br />\n                    <Box m={-1}>\n                        <TextField className='Signup-input' id='password' onChange={ this.handleChange } type='password' value={ this.state.password } variant='filled' label='Password' autoComplete='off' />\n                    </Box>\n                    <br />\n                    <Box m={1}>\n                        <Button className='Signup-button' type='submit' variant='contained' color='primary'>Sign Up</Button>\n                    </Box>\n                </form>\n                <Box m={2}>\n                    <Link to={`/`} className='Login-link' type='button'>Have an account? Login</Link>\n                </Box>\n            </div>\n        )\n    }\n}\n\nexport default Signup;\n","export const loginSuccess = (user) => {\n    return {\n        type: 'LOGIN_SUCCESS',\n        user: user\n    }\n}\n\nexport const logoutUser = (user) => {\n    return {\n        type: 'LOGOUT_USER'\n    }\n}\n\nexport const currentUser = (user) => {\n    return {\n        type: 'CURRENT_USER',\n        user: user\n    }\n}\n","import React from 'react';\nimport { loginSuccess } from '../actions/auth';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography';\n\nconst authAPI = `https://gamutart.herokuapp.com/auth`\n\nclass Login extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            email: '',\n            username: '',\n            password: ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        })\n    }\n\n    loginUser = (e) => {\n        e.preventDefault()\n        // Send the user info to the backend\n        const reqObj = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              Accept: 'application/json'\n            },\n            body: JSON.stringify(this.state)\n        }\n        fetch(authAPI, reqObj)\n            .then(resp => resp.json())\n            .then(user => {\n                if (user.error) {\n                    alert(user.error)\n                } else {\n                    console.log(user)\n                    localStorage.setItem('token', user.token)\n                    this.props.loginSuccess(user)\n                    // Redirect to /search path\n                    this.props.history.push(`/search`)\n                }\n            })\n    }\n\n    render() {\n        return (\n            <div className='Signup-form'>\n                <img src='../gamut.png' alt='Gamut' className='Gamut-logo' />\n                <Box m={3}>\n                <Typography className='Signup-title' variant='h4'>Welcome back.</Typography>\n                </Box>\n                <form onSubmit={ this.loginUser }>\n                    <Box m={-1}>\n                        <TextField className='Signup-input' id='username' onChange={ this.handleChange } type='text' value={ this.state.username } variant='filled' label='Username' autoComplete='off' />\n                    </Box>\n                    <br />\n                    <Box m={1}>\n                        <TextField className='Signup-input' id='password' onChange={ this.handleChange } type='password' value={ this.state.password } variant='filled' label='Password' autoComplete='off' />\n                    </Box>\n                    <br />\n                    <Box m={-1}>\n                        <Button className='Signup-button' type='submit' variant='contained' color='primary'>Login</Button>\n                    </Box>\n                </form>\n                <Box m={3}>\n                    <Link to={`/signup`} className='Login-link' type='button'>New to Gamut? Sign-Up</Link>\n                </Box>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    loginSuccess\n}\n  \nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography'\n\nconst backendArtworksAPI = 'https://gamutart.herokuapp.com/artworks'\nconst artworkCollectionsAPI = 'https://gamutart.herokuapp.com/artwork_collections'\n\nclass Artwork extends Component {\n\n    handleSave = () => {\n        // Assemble the object to send to backend\n        // Make POST request to artworks controller\n        // Add artwork to current user's collection\n        const artDetails = {\n            title: this.props.art.title,\n            image: this.props.art.image,\n            artist: this.props.art.artistName,\n            date: this.props.art.completitionYear\n        }\n        const reqObj = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n            },\n            body: JSON.stringify(artDetails)\n        }\n        fetch(backendArtworksAPI, reqObj)\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data)\n            console.log(this.props.user)\n            const collectionDetails = {\n                collection_id: this.props.user.id,\n                artwork_id: data.id\n            }\n            const reqObj = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Accept: 'application/json'\n                },\n                body: JSON.stringify(collectionDetails)\n            }\n            fetch(artworkCollectionsAPI, reqObj)\n            .then(resp => resp.json())\n            .then(data => console.log(data))\n            .catch(err => console.log(err))\n        })\n        .catch(err => console.log(err))\n    }\n\n    render() {\n        console.log(this.props)\n        const divStyle = {\n            height: '75%',\n            width: '75%'\n        }\n\n        return(\n            <div>\n                <Typography className='Artwork-info' variant='h4'>{this.props.art.title}</Typography>\n                <a href={`${this.props.art.image}`} target=\"_blank\">\n                    <img src={`${this.props.art.image}`} alt='Artwork' style={divStyle} />\n                </a>\n                <div className='Artwork-info'>\n                    <Typography className='Artwork-info' variant='h5'>{this.props.art.artistName}</Typography>\n                    <Typography className='Artwork-info' variant='h6'>{this.props.art.completitionYear}</Typography>\n                    <Button variant='contained' color='primary' onClick={this.handleSave} type='submit'>Add to Collection</Button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Artwork;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Artwork from '../components/Artwork';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper'\n\nclass ArtworkContainer extends Component {\n    renderArtworks = () => {\n        return this.props.artworks.map(art =>   {\n            return(\n                <Grid item xs={4}>\n                    <Paper className='Artwork-card' elevation={3}>\n                        <Artwork art={art} key={art.id} user={this.props.auth} />\n                    </Paper>\n                </Grid>\n            )\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <div>\n                    <Grid\n                        spacing={3}\n                        container direction='row'\n                        justify='space-evenly'\n                        alignItems='flex-start'\n                    >\n                        {this.renderArtworks()}\n                    </Grid>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.auth\n    }\n}\n\nexport default connect(mapStateToProps, null)(ArtworkContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { currentUser } from '../actions/auth';\nimport ArtworkContainer from '../containers/ArtworkContainer';\nimport TextField from '@material-ui/core/TextField';\nimport BrushIcon from '@material-ui/icons/Brush';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box'\n\nclass Search extends Component {\n\n  componentDidMount() {\n    const token = localStorage.getItem('token')\n    console.log(token)\n    if (!token) {\n      this.props.history.push('/')\n    } else {\n      const reqObj = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`,\n        }\n      }\n      console.log(reqObj)\n      fetch('https://gamutart.herokuapp.com/current_user', reqObj)\n        .then(resp => resp.json())\n        .then(user => {\n          console.log(user)\n          if (user.error) {\n            this.props.history.push('/')\n          } else {\n            // Update the Redux store with User\n            this.props.currentUser(user)\n            this.setState({\n              user: user\n            })\n          }\n        })\n    }\n  }\n\n    constructor() {\n        super()\n        this.state = {\n          pageNumber: 1,\n          searchTerm: '',\n          artworks: [],\n          totalResults: 0,\n          user: []\n        }\n    }\n    \n      handleChange = (e) => {\n        this.setState({\n          [e.target.name]: e.target.value\n        })\n      }\n    \n      submitSearch = (e) => {\n        e.preventDefault()\n        this.fetchArt()\n      }\n    \n      fetchArt = () => {\n        let searchTerm = this.state.searchTerm\n        let pageNumber = this.state.pageNumber\n        const proxyURL = 'https://cors-anywhere.herokuapp.com/'\n        const artworkURL = `https://www.wikiart.org/en/api/2/PaintingSearch?term=${searchTerm}&pagination`\n        fetch(proxyURL + artworkURL)\n            .then(resp => resp.json())\n            .then(data => {\n                this.setState({\n                    artworks: data.data,\n                    pageNumber: this.state.pageNumber,\n                    searchTerm: ''\n                })\n            })\n      }\n\n    render() {\n        return(\n            <div>\n                <div className='Search-div'>\n                      <Typography className='Greeting-title' variant='h4'>Hello, {this.state.user.username}.</Typography>\n                    <Box m={3}>\n                      <Typography className='Search-title' variant='h3'>What are you looking for?</Typography>\n                    </Box>\n                    <form onSubmit={ (e) => this.submitSearch(e) }>\n                        <TextField className='Search-bar' id='search' onChange={ this.handleChange } name='searchTerm' type='text' value={ this.state.searchTerm } fontSize='18px' placeholder='artist, title, date...' autoComplete='off' />\n                        <Tooltip title='Search'>\n                          <IconButton color='primary' type='submit'>\n                              <BrushIcon />\n                          </IconButton>\n                        </Tooltip>\n                    </form>\n                </div>\n                <ArtworkContainer \n                    artworks={this.state.artworks}\n                    pageNumber={this.state.pageNumber}\n                    fetchMore={this.fetchMore}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth\n  }\n}\n\nconst mapDispatchToProps = {\n  currentUser\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, { Component } from 'react';\nimport { AppBar, Toolbar, Button, Typography } from '@material-ui/core'\n\nclass Navbar extends Component {\n    \n    render() {\n        return(\n            <AppBar position='static' style={{background: 'transparent'}}>\n                <Toolbar>\n                    <Button href='/search' style={{ flexGrow: 1 }}>\n                        <Typography variant='h6'>\n                            Search\n                        </Typography>\n                    </Button>\n                    <Button href='/collection' style={{ flexGrow: 1 }}>\n                        <Typography variant='h6'>\n                            Collection\n                        </Typography>\n                    </Button>\n                    <Button href='/account' style={{ flexGrow: 1 }}>\n                        <Typography variant='h6'>\n                            Account\n                        </Typography>\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton'\n\nclass UserArtwork extends Component {\n\n    render() {\n        console.log(this.props)\n        const divStyle = {\n            height: '75%',\n            width: '75%'\n        }\n\n        return(\n            <div>\n                <Typography className='Artwork-info' variant='h4'>{this.props.userArtwork.title}</Typography>\n                <a href={`${this.props.userArtwork.image}`} target=\"_blank\">\n                    <img src={`${this.props.userArtwork.image}`} alt='Artwork' style={divStyle} />\n                </a>\n                <div className='Artwork-info'>\n                    <Typography className='Artwork-info' variant='h5'>{this.props.userArtwork.artist}</Typography>\n                    <Typography className='Artwork-info' variant='h6'>{this.props.userArtwork.date}</Typography>\n                    <IconButton color='secondary' type='submit'>\n                        <DeleteIcon onClick={() => {this.props.deleteUserArtwork(this.props.userArtwork)}} />\n                    </IconButton>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserArtwork;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport UserArtwork from '../components/UserArtwork';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper'\n\nclass UserArtworkContainer extends Component {\n    renderArtworks = () => {\n        return this.props.collection.map(userArtwork =>   {\n            return(\n                <Grid item xs={4}>\n                    <Paper className='Artwork-card' elevation={3}>\n                        <UserArtwork userArtwork={userArtwork} key={userArtwork.id} user={this.props.auth} deleteUserArtwork={this.props.deleteUserArtwork} />\n                    </Paper>\n                </Grid>\n            )\n        })\n    }\n\n    render() {\n        console.log(this.props.collection)\n        return(\n            <div>\n                <div>\n                    <Grid\n                        spacing={3}\n                        container direction='row'\n                        justify='space-evenly'\n                        alignItems='flex-start'\n                    >\n                        {this.renderArtworks()}\n                    </Grid>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.auth\n    }\n}\n\nexport default connect(mapStateToProps, null)(UserArtworkContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { currentUser } from '../actions/auth';\nimport UserArtworkContainer from '../containers/UserArtworkContainer';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SearchIcon from '@material-ui/icons/Search'\n\n\nconst usersURL = 'https://gamutart.herokuapp.com/users'\nconst userArtworksURL = 'https://gamutart.herokuapp.com/artworks'\n\nclass Collection extends Component {\n\n    componentDidMount() {\n        const token = localStorage.getItem('token')\n        console.log(token)\n        if (!token) {\n            this.props.history.push('/')\n        } else {\n            const reqObj = {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                }\n            }\n            console.log(reqObj)\n            fetch('https://gamutart.herokuapp.com/current_user', reqObj)\n            .then(resp => resp.json())\n            .then(user => {\n                console.log(user)\n                if (user.error) {\n                    this.props.history.push('/')\n                } else {\n                    // Update the Redux store with User\n                    this.props.currentUser(user)\n                }\n                fetch(`${usersURL}/${user.id}`)\n                .then(resp => resp.json())\n                .then(data => this.setState({\n                    collection: data.artworks,\n                    user: user\n                }))\n            })\n        }\n    }\n\n    constructor() {\n        super()\n        this.state = {\n            collection: [],\n            filteredSearch: '',\n            user: {}\n        }\n    }\n\n    handleSearch = (e) => {\n        this.setState({\n          filteredSearch: e.target.value\n        })\n    }\n    \n    filteredCollection = () => {\n        const filtered = this.state.collection.filter(userArtwork => {\n          return(\n            userArtwork.title.toLowerCase().includes(this.state.filteredSearch.toLowerCase())\n            // userArtwork.artist.toLowerCase().includes(this.state.filteredSearch.toLowerCase()) ||\n            // userArtwork.date.toLowerCase().includes(this.state.filteredSearch.toLowerCase())\n          )\n        })\n        if (filtered.length === 0) {\n            return []\n        } else {\n            return filtered\n        }\n    }\n\n//     filteredCollection = () => {\n//         const title =  this.state.collection.filter(userArtwork => {\n//               return userArtwork.title.toLowerCase().includes(this.state.filteredSearch.toLowerCase())\n//         })\n//         const artist =  this.state.collection.filter(userArtwork => {\n//               return userArtwork.artist.toLowerCase().includes(this.state.filteredSearch.toLowerCase())\n//         })\n//         const date =  this.state.collection.filter(userArtwork => {\n//               return userArtwork.date.toLowerCase().includes(this.state.filteredSearch.toLowerCase())\n//         })\n              \n//     console.log(title, artist, date)\n//     return(\n//         title\n//     )\n//   }\n\n    deleteUserArtwork = (userArtwork) => {\n        const deleteFilter = this.state.collection.filter(userArtworkObj => {\n          return userArtworkObj.id !== userArtwork.id\n        })\n          this.setState({\n            collection: deleteFilter\n          })\n    \n        const configObj = { method: 'DELETE' }\n    \n        fetch(`${userArtworksURL}/${userArtwork.id}`, configObj)\n    }\n\n    renderCollection = () => {\n        return(\n            <div>\n                <TextField className='Search-bar' id='search' onChange={ this.handleSearch } name='searchTerm' type='text' value={ this.state.searchTerm } fontSize='18px' placeholder='Filter by Title' autoComplete='off' />\n                    <Tooltip title='Filter'>\n                        <IconButton color='primary' type='submit'>\n                            <SearchIcon />\n                        </IconButton>\n                    </Tooltip>\n                <UserArtworkContainer collection={this.filteredCollection()} deleteUserArtwork={this.deleteUserArtwork} />\n            </div>\n        )\n    }\n\n    render() {\n        console.log(this.state.collection)\n        console.log(this.state.user.id)\n        // console.log(this.filteredCollection())\n        return(\n            <>\n                {this.state.user ?\n                    this.renderCollection() :\n                    null\n                }\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.auth\n    }\n}\n  \nconst mapDispatchToProps = {\n    currentUser\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Collection);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { currentUser } from '../actions/auth';\nimport { Typography, Button, Box } from '@material-ui/core'\n\nclass Account extends Component {\n\n    componentDidMount() {\n        const token = localStorage.getItem('token')\n        console.log(token)\n        if (!token) {\n          this.props.history.push('/')\n        } else {\n          const reqObj = {\n            method: 'GET',\n            headers: {\n              Authorization: `Bearer ${token}`,\n            }\n          }\n          console.log(reqObj)\n          fetch('https://gamutart.herokuapp.com/current_user', reqObj)\n            .then(resp => resp.json())\n            .then(user => {\n              console.log(user)\n              if (user.error) {\n                this.props.history.push('/login')\n              } else {\n                // Update the Redux store with User\n                this.props.currentUser(user)\n                this.setState({\n                    user: user\n                })\n              }\n            })\n        }\n    }\n\n    constructor() {\n        super()\n        this.state = {\n            user: []\n        }\n    }\n\n    handleLogout = () => {\n        localStorage.removeItem('token')\n        this.props.logoutUser()\n    }\n\n    render() {\n        return(\n            <div className='Particle-js'>\n                <div className='Account-card'>\n                    <Typography className='Account-details' variant='h4'>\n                        {this.state.user.username}\n                    </Typography>\n                    <Typography className='Account-details' variant='h4'>\n                        {this.state.user.email}\n                    </Typography>\n                </div>\n                    <Box m={3}>\n                        <Button className='Logout-button' type='submit' onClick={this.handleLogout} href='/login' variant='contained' color='primary'>Logout</Button>\n                    </Box>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      auth: state.auth\n    }\n  }\n  \nconst mapDispatchToProps = {\n    currentUser\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Account);  \n","import React, {Component} from 'react';\nimport '../css/App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Signup from './Signup';\nimport Login from './Login';\nimport Search from './Search';\nimport Navbar from './Navbar';\nimport Collection from './Collection';\nimport Account from './Account'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route path={ '/signup' } component={ Signup } />\n            <Route path={ '/' } component={ Login } />\n            <Route path={ '/search' }>\n              <Navbar />\n              <Search />\n            </Route>\n            <Route path={ '/collection' }>\n              <Navbar />\n              <Collection />\n            </Route>\n            <Route path={ '/account' }>\n              <Navbar />\n              <Account />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport auth from './auth'\n\nexport default combineReducers({\n    auth\n})\n","export default (state=null, action) => {\n    switch(action.type) {\n        case 'LOGIN_SUCCESS':\n            case 'CURRENT_USER':\n                return action.user\n        case 'LOGOUT_USER':\n            return null\n        default:\n        return state\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index';\nimport { BrowserRouter } from 'react-router-dom'\nimport { createMuiTheme, MuiThemeProvider, colors } from '@material-ui/core';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  colors: {\n    secondary: 'red'\n  }\n})\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <BrowserRouter>\n      <Provider store={ store }>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}